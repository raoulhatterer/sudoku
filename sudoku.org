#+STARTUP: inlineimages
#+LANGUAGE: fr
#+LATEX_HEADER: \usepackage[AUTO]{babel}
#+LaTeX_HEADER: \usepackage[x11names]{xcolor}
#+LaTeX_HEADER: \hypersetup{linktoc = all, colorlinks = true, urlcolor = DodgerBlue4, citecolor = PaleGreen1, linkcolor = black}
#+LATEX_HEADER: \usepackage[left=1cm,right=1cm,top=2cm,bottom=2cm]{geometry}
#+TITLE: Diplôme Inter-Universitaire
#+SUBTITLE: Projet Sudoku
#+AUTHOR: Raoul HATTERER & Jean-Luc COSSALTER 
#+OPTIONS: toc:1

* Choix du niveau

| niveau   | restant | pourcentage | minimum |
|----------+---------+-------------+---------|
| Beginner |      24 |          30 |       1 |
| Easy     |      37 |          46 |       2 |
| Medium   |      46 |          57 |       3 |
| Hard     |      52 |          64 |       4 |
| Extreme  |      57 |          70 |       5 |
|----------+---------+-------------+---------|
#+TBLFM: $3=round(100*$2/81) 

- restant : numéros restant à placer (sur 81)
- minimum : nombre minimum de numéros pour compléter les blocs de 9 numéros (ligne, colonne ou carré)

* Sacs de chiffres restant à placer.

#+begin_src python -n
class sac:
    """ 
    Un sac contient à l'origine 9 numéros identiques. 
    
    À l'initialisation de la grille:
    un certain nombre de ces numéros est prélévé pour les placer sur la grille.  
    Au cours du jeu:
    tant qu'il reste des numéros dans un sac, le joueur peux en piocher pour les placer sur la grille.
    """
    def __init__ (self,numero):
        self.id = numero
        self.contenu = 9 

def sacs_pleins():
    """
    Initialisation d'une liste contenant 9 sacs

    chaque sac contenant chacun 9 numéros identiques
    """
    liste_sacs = list()
    for i in range(9):
        liste_sacs.append(sac(i))
    return liste_sacs

liste_sacs = sacs_pleins()
#+end_src

#+RESULTS:
: None

* Cases

La grille comporte 81 cases.

#+begin_src python -n
class case:
    def __init__ (self,numero):
        self.id = numero
        self.valeur = 0
        self.pretendants = [1,2,3,4,5,6,7,8,9] 

def cases_vides():
    """
    initialisation d'une liste contenant les 81 cases

    numérotées de 1 à 81
    """
    NBR_CASES = 81
    liste_cases = [case(0)] # occupe l'index 0 qui ne sera pas utilisé 
    for i in range(1,NBR_CASES+1):
        liste_cases.append(case(i))
    return liste_cases

liste_cases = cases_vides()
#+end_src

#+RESULTS:
: None
